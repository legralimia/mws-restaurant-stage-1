{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/sw.js"],"names":[],"mappings":"AAAA;;;ACAA,IAAI,eAAe,GAAC,aAApB;AAEA,IAAI,CAAC,gBAAL,CAAsB,SAAtB,EAAiC,UAAU,KAAV,EAAiB;AAC9C,EAAA,KAAK,CAAC,SAAN,CAAgB,MAAM,CAAC,IAAP,CAAY,eAAZ,EAA6B,IAA7B,CAAkC,UAAA,KAAK,EAAG;AACxD,WAAO,KAAK,CAAC,MAAN,CAAa,CAChB,GADgB,EAEhB,aAFgB,EAGhB,kBAHgB,EAIhB,wBAJgB,EAKhB,MALgB,EAMhB,aANgB,EAOhB,iBAPgB,EAQhB,uBARgB,EAShB,iBATgB,EAUf,iBAVe,EAWf,OAXe,CAAb,EAYL,KAZK,CAYC,UAAA,KAAK,EAAE;AACb,MAAA,OAAO,CAAC,GAAR,CAAY,wBAAZ;AACF,KAdO,CAAP;AAeD,GAhBe,CAAhB;AAiBD,CAlBH;AAqBE,IAAI,CAAC,gBAAL,CAAsB,OAAtB,EAA+B,UAAS,KAAT,EAAgB;AAC7C,EAAA,KAAK,CAAC,WAAN,CACE,MAAM,CAAC,KAAP,CAAa,KAAK,CAAC,OAAnB,EACG,IADH,CACQ,UAAS,QAAT,EAAmB;AACvB;AACA,QAAI,QAAJ,EAAc;AACZ,aAAO,QAAP;AACD;;AACD,QAAG,KAAK,CAAC,OAAN,KAAgB,WAAnB,EAA+B;AAC7B,MAAA,KAAK,CAAC,OAAN,CAAc,IAAd,GAAmB,SAAnB;AACD;;AAED,QAAI,YAAY,GAAG,KAAK,CAAC,OAAN,CAAc,KAAd,EAAnB;AACA,QAAG,YAAY,CAAC,GAAb,CAAiB,QAAjB,CAA0B,YAA1B,CAAH,EACA,YAAY,GAAC,IAAI,OAAJ,CAAY,iBAAZ,CAAb;AAEA,WAAO,KAAK,CAAC,YAAD,CAAL,CAAoB,IAApB,CACL,UAAS,QAAT,EAAmB;AACjB;AACA,UAAG,CAAC,QAAD,IAAa,QAAQ,CAAC,MAAT,KAAoB,GAAjC,IAAwC,QAAQ,CAAC,IAAT,KAAkB,OAA7D,EAAsE;AACpE,eAAO,QAAP;AACD;;AAGD,UAAI,eAAe,GAAG,QAAQ,CAAC,KAAT,EAAtB;AAEA,MAAA,MAAM,CAAC,IAAP,CAAY,eAAZ,EACG,IADH,CACQ,UAAS,KAAT,EAAgB;AACpB,QAAA,KAAK,CAAC,GAAN,CAAU,KAAK,CAAC,OAAhB,EAAyB,eAAzB;AACD,OAHH;AAKA,aAAO,QAAP;AACD,KAhBI,EAiBL,KAjBK,CAiBC,UAAS,KAAT,EAAe;AACrB,aAAO,IAAI,QAAJ,CAAa,sBAAb,EAAoC;AAAC,QAAA,MAAM,EAAC,GAAR;AAAY,QAAA,UAAU,EAAC;AAAvB,OAApC,CAAP;AACD,KAnBM,CAAP;AAoBD,GAlCH,CADF;AAqCD,CAtCD","file":"sw.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","var staticCacheName=\"restaurant1\"\r\n\r\nself.addEventListener('install', function (event) {\r\n    event.waitUntil(caches.open(staticCacheName).then(cache=> {\r\n      return cache.addAll([\r\n          '/', \r\n          '/index.html',\r\n          '/restaurant.html',          \r\n          '/data/restaurants.json',\r\n          '/js/',\r\n          '/js/main.js',\r\n          '/js/dbhelper.js',\r\n          '/js/retaurant_info.js',\r\n          '/js/register.js',\r\n           '/css/styles.css',\r\n           '/img/'\r\n     ]).catch(error=>{\r\n        console.log(\"Error retrieving cache\");\r\n     });\r\n    }));\r\n  });\r\n\r\n\r\n  self.addEventListener('fetch', function(event) {\r\n    event.respondWith(\r\n      caches.match(event.request)\r\n        .then(function(response) {\r\n          // Cache hit - return response\r\n          if (response) {\r\n            return response;\r\n          }\r\n          if(event.request!==\"localhost\"){\r\n            event.request.mode=\"no-cors\";\r\n          }\r\n         \r\n          var fetchRequest = event.request.clone();\r\n          if(fetchRequest.url.includes(\"restaurant\"))\r\n          fetchRequest=new Request(\"restaurant.html\");\r\n  \r\n          return fetch(fetchRequest).then(\r\n            function(response) {\r\n              // Check if we received a valid response\r\n              if(!response || response.status !== 200 || response.type !== 'basic') {\r\n                return response;\r\n              }\r\n  \r\n              \r\n              var responseToCache = response.clone();\r\n  \r\n              caches.open(staticCacheName)\r\n                .then(function(cache) {\r\n                  cache.put(event.request, responseToCache);\r\n                });\r\n  \r\n              return response;\r\n            }\r\n          ).catch(function(error){\r\n            return new Response(\"App is not connected\",{status:404,statusText:\"not connected\"})\r\n          });\r\n        })\r\n      );\r\n  });\r\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvc3cuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztBQ0FBLElBQUksZUFBZSxHQUFDLGFBQXBCO0FBRUEsSUFBSSxDQUFDLGdCQUFMLENBQXNCLFNBQXRCLEVBQWlDLFVBQVUsS0FBVixFQUFpQjtBQUM5QyxFQUFBLEtBQUssQ0FBQyxTQUFOLENBQWdCLE1BQU0sQ0FBQyxJQUFQLENBQVksZUFBWixFQUE2QixJQUE3QixDQUFrQyxVQUFBLEtBQUssRUFBRztBQUN4RCxXQUFPLEtBQUssQ0FBQyxNQUFOLENBQWEsQ0FDaEIsR0FEZ0IsRUFFaEIsYUFGZ0IsRUFHaEIsa0JBSGdCLEVBSWhCLHdCQUpnQixFQUtoQixNQUxnQixFQU1oQixhQU5nQixFQU9oQixpQkFQZ0IsRUFRaEIsdUJBUmdCLEVBU2hCLGlCQVRnQixFQVVmLGlCQVZlLEVBV2YsT0FYZSxDQUFiLEVBWUwsS0FaSyxDQVlDLFVBQUEsS0FBSyxFQUFFO0FBQ2IsTUFBQSxPQUFPLENBQUMsR0FBUixDQUFZLHdCQUFaO0FBQ0YsS0FkTyxDQUFQO0FBZUQsR0FoQmUsQ0FBaEI7QUFpQkQsQ0FsQkg7QUFxQkUsSUFBSSxDQUFDLGdCQUFMLENBQXNCLE9BQXRCLEVBQStCLFVBQVMsS0FBVCxFQUFnQjtBQUM3QyxFQUFBLEtBQUssQ0FBQyxXQUFOLENBQ0UsTUFBTSxDQUFDLEtBQVAsQ0FBYSxLQUFLLENBQUMsT0FBbkIsRUFDRyxJQURILENBQ1EsVUFBUyxRQUFULEVBQW1CO0FBQ3ZCO0FBQ0EsUUFBSSxRQUFKLEVBQWM7QUFDWixhQUFPLFFBQVA7QUFDRDs7QUFDRCxRQUFHLEtBQUssQ0FBQyxPQUFOLEtBQWdCLFdBQW5CLEVBQStCO0FBQzdCLE1BQUEsS0FBSyxDQUFDLE9BQU4sQ0FBYyxJQUFkLEdBQW1CLFNBQW5CO0FBQ0Q7O0FBRUQsUUFBSSxZQUFZLEdBQUcsS0FBSyxDQUFDLE9BQU4sQ0FBYyxLQUFkLEVBQW5CO0FBQ0EsUUFBRyxZQUFZLENBQUMsR0FBYixDQUFpQixRQUFqQixDQUEwQixZQUExQixDQUFILEVBQ0EsWUFBWSxHQUFDLElBQUksT0FBSixDQUFZLGlCQUFaLENBQWI7QUFFQSxXQUFPLEtBQUssQ0FBQyxZQUFELENBQUwsQ0FBb0IsSUFBcEIsQ0FDTCxVQUFTLFFBQVQsRUFBbUI7QUFDakI7QUFDQSxVQUFHLENBQUMsUUFBRCxJQUFhLFFBQVEsQ0FBQyxNQUFULEtBQW9CLEdBQWpDLElBQXdDLFFBQVEsQ0FBQyxJQUFULEtBQWtCLE9BQTdELEVBQXNFO0FBQ3BFLGVBQU8sUUFBUDtBQUNEOztBQUdELFVBQUksZUFBZSxHQUFHLFFBQVEsQ0FBQyxLQUFULEVBQXRCO0FBRUEsTUFBQSxNQUFNLENBQUMsSUFBUCxDQUFZLGVBQVosRUFDRyxJQURILENBQ1EsVUFBUyxLQUFULEVBQWdCO0FBQ3BCLFFBQUEsS0FBSyxDQUFDLEdBQU4sQ0FBVSxLQUFLLENBQUMsT0FBaEIsRUFBeUIsZUFBekI7QUFDRCxPQUhIO0FBS0EsYUFBTyxRQUFQO0FBQ0QsS0FoQkksRUFpQkwsS0FqQkssQ0FpQkMsVUFBUyxLQUFULEVBQWU7QUFDckIsYUFBTyxJQUFJLFFBQUosQ0FBYSxzQkFBYixFQUFvQztBQUFDLFFBQUEsTUFBTSxFQUFDLEdBQVI7QUFBWSxRQUFBLFVBQVUsRUFBQztBQUF2QixPQUFwQyxDQUFQO0FBQ0QsS0FuQk0sQ0FBUDtBQW9CRCxHQWxDSCxDQURGO0FBcUNELENBdENEIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKXtmdW5jdGlvbiByKGUsbix0KXtmdW5jdGlvbiBvKGksZil7aWYoIW5baV0pe2lmKCFlW2ldKXt2YXIgYz1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlO2lmKCFmJiZjKXJldHVybiBjKGksITApO2lmKHUpcmV0dXJuIHUoaSwhMCk7dmFyIGE9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitpK1wiJ1wiKTt0aHJvdyBhLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsYX12YXIgcD1uW2ldPXtleHBvcnRzOnt9fTtlW2ldWzBdLmNhbGwocC5leHBvcnRzLGZ1bmN0aW9uKHIpe3ZhciBuPWVbaV1bMV1bcl07cmV0dXJuIG8obnx8cil9LHAscC5leHBvcnRzLHIsZSxuLHQpfXJldHVybiBuW2ldLmV4cG9ydHN9Zm9yKHZhciB1PVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmUsaT0wO2k8dC5sZW5ndGg7aSsrKW8odFtpXSk7cmV0dXJuIG99cmV0dXJuIHJ9KSgpIiwidmFyIHN0YXRpY0NhY2hlTmFtZT1cInJlc3RhdXJhbnQxXCJcclxuXHJcbnNlbGYuYWRkRXZlbnRMaXN0ZW5lcignaW5zdGFsbCcsIGZ1bmN0aW9uIChldmVudCkge1xyXG4gICAgZXZlbnQud2FpdFVudGlsKGNhY2hlcy5vcGVuKHN0YXRpY0NhY2hlTmFtZSkudGhlbihjYWNoZT0+IHtcclxuICAgICAgcmV0dXJuIGNhY2hlLmFkZEFsbChbXHJcbiAgICAgICAgICAnLycsIFxyXG4gICAgICAgICAgJy9pbmRleC5odG1sJyxcclxuICAgICAgICAgICcvcmVzdGF1cmFudC5odG1sJywgICAgICAgICAgXHJcbiAgICAgICAgICAnL2RhdGEvcmVzdGF1cmFudHMuanNvbicsXHJcbiAgICAgICAgICAnL2pzLycsXHJcbiAgICAgICAgICAnL2pzL21haW4uanMnLFxyXG4gICAgICAgICAgJy9qcy9kYmhlbHBlci5qcycsXHJcbiAgICAgICAgICAnL2pzL3JldGF1cmFudF9pbmZvLmpzJyxcclxuICAgICAgICAgICcvanMvcmVnaXN0ZXIuanMnLFxyXG4gICAgICAgICAgICcvY3NzL3N0eWxlcy5jc3MnLFxyXG4gICAgICAgICAgICcvaW1nLydcclxuICAgICBdKS5jYXRjaChlcnJvcj0+e1xyXG4gICAgICAgIGNvbnNvbGUubG9nKFwiRXJyb3IgcmV0cmlldmluZyBjYWNoZVwiKTtcclxuICAgICB9KTtcclxuICAgIH0pKTtcclxuICB9KTtcclxuXHJcblxyXG4gIHNlbGYuYWRkRXZlbnRMaXN0ZW5lcignZmV0Y2gnLCBmdW5jdGlvbihldmVudCkge1xyXG4gICAgZXZlbnQucmVzcG9uZFdpdGgoXHJcbiAgICAgIGNhY2hlcy5tYXRjaChldmVudC5yZXF1ZXN0KVxyXG4gICAgICAgIC50aGVuKGZ1bmN0aW9uKHJlc3BvbnNlKSB7XHJcbiAgICAgICAgICAvLyBDYWNoZSBoaXQgLSByZXR1cm4gcmVzcG9uc2VcclxuICAgICAgICAgIGlmIChyZXNwb25zZSkge1xyXG4gICAgICAgICAgICByZXR1cm4gcmVzcG9uc2U7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICBpZihldmVudC5yZXF1ZXN0IT09XCJsb2NhbGhvc3RcIil7XHJcbiAgICAgICAgICAgIGV2ZW50LnJlcXVlc3QubW9kZT1cIm5vLWNvcnNcIjtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgXHJcbiAgICAgICAgICB2YXIgZmV0Y2hSZXF1ZXN0ID0gZXZlbnQucmVxdWVzdC5jbG9uZSgpO1xyXG4gICAgICAgICAgaWYoZmV0Y2hSZXF1ZXN0LnVybC5pbmNsdWRlcyhcInJlc3RhdXJhbnRcIikpXHJcbiAgICAgICAgICBmZXRjaFJlcXVlc3Q9bmV3IFJlcXVlc3QoXCJyZXN0YXVyYW50Lmh0bWxcIik7XHJcbiAgXHJcbiAgICAgICAgICByZXR1cm4gZmV0Y2goZmV0Y2hSZXF1ZXN0KS50aGVuKFxyXG4gICAgICAgICAgICBmdW5jdGlvbihyZXNwb25zZSkge1xyXG4gICAgICAgICAgICAgIC8vIENoZWNrIGlmIHdlIHJlY2VpdmVkIGEgdmFsaWQgcmVzcG9uc2VcclxuICAgICAgICAgICAgICBpZighcmVzcG9uc2UgfHwgcmVzcG9uc2Uuc3RhdHVzICE9PSAyMDAgfHwgcmVzcG9uc2UudHlwZSAhPT0gJ2Jhc2ljJykge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlO1xyXG4gICAgICAgICAgICAgIH1cclxuICBcclxuICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICB2YXIgcmVzcG9uc2VUb0NhY2hlID0gcmVzcG9uc2UuY2xvbmUoKTtcclxuICBcclxuICAgICAgICAgICAgICBjYWNoZXMub3BlbihzdGF0aWNDYWNoZU5hbWUpXHJcbiAgICAgICAgICAgICAgICAudGhlbihmdW5jdGlvbihjYWNoZSkge1xyXG4gICAgICAgICAgICAgICAgICBjYWNoZS5wdXQoZXZlbnQucmVxdWVzdCwgcmVzcG9uc2VUb0NhY2hlKTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gIFxyXG4gICAgICAgICAgICAgIHJldHVybiByZXNwb25zZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgKS5jYXRjaChmdW5jdGlvbihlcnJvcil7XHJcbiAgICAgICAgICAgIHJldHVybiBuZXcgUmVzcG9uc2UoXCJBcHAgaXMgbm90IGNvbm5lY3RlZFwiLHtzdGF0dXM6NDA0LHN0YXR1c1RleHQ6XCJub3QgY29ubmVjdGVkXCJ9KVxyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgfSlcclxuICAgICAgKTtcclxuICB9KTtcclxuIl19"}